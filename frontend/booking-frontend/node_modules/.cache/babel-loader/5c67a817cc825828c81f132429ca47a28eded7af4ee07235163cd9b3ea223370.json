{"ast":null,"code":"var _jsxFileName = \"D:\\\\codining\\\\SE\\\\project\\\\Hotel-Booking-Microservices\\\\frontend\\\\booking-frontend\\\\src\\\\components\\\\GroupBookingForm.js\",\n  _s = $RefreshSig$();\n// src/components/GroupBookingForm.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport API from '../api'; // booking-service client\n// if you used separate clients: import { HotelAPI, BookingAPI } from '../api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getDatesBetween(start, end) {\n  const dates = [];\n  let curr = new Date(start);\n  const last = new Date(end);\n  while (curr < last) {\n    dates.push(curr.toISOString().split('T')[0]);\n    curr.setDate(curr.getDate() + 1);\n  }\n  return dates;\n}\nconst GroupBookingForm = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // state\n  const [hotels, setHotels] = useState([]);\n  const [selectedHotel, setSelectedHotel] = useState('');\n  const [rooms, setRooms] = useState([]);\n  const [filteredRooms, setFilteredRooms] = useState([]);\n  const [typeFilter, setTypeFilter] = useState({\n    Single: false,\n    Double: false,\n    Suite: false\n  });\n  const [filterDates, setFilterDates] = useState({\n    checkIn: '',\n    checkOut: ''\n  });\n  const [selectedRoomIds, setSelectedRoomIds] = useState(new Set());\n  const [formData, setFormData] = useState({\n    agentEmail: '',\n    discountRate: 0\n  });\n  const [message, setMessage] = useState('');\n\n  // 1. Fetch hotels on mount\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/hotels').then(r => setHotels(r.data)).catch(console.error);\n  }, []);\n\n  // 2. Fetch rooms when hotel changes\n  useEffect(() => {\n    if (!selectedHotel) return;\n    axios.get('http://localhost:5000/api/rooms', {\n      params: {\n        hotel: selectedHotel\n      }\n    }).then(r => setRooms(r.data)).catch(console.error);\n    // reset filters & selection\n    setTypeFilter({\n      Single: false,\n      Double: false,\n      Suite: false\n    });\n    setFilterDates({\n      checkIn: '',\n      checkOut: ''\n    });\n    setSelectedRoomIds(new Set());\n    setFilteredRooms([]);\n  }, [selectedHotel]);\n\n  // 3. Recompute filteredRooms when rooms, types, or dates change\n  useEffect(() => {\n    const {\n      checkIn,\n      checkOut\n    } = filterDates;\n    const needed = checkIn && checkOut ? getDatesBetween(checkIn, checkOut) : [];\n    const types = Object.entries(typeFilter).filter(([_, v]) => v).map(([t]) => t);\n    const fr = rooms.filter(room => {\n      // type filter\n      if (types.length && !types.includes(room.type)) return false;\n      // date filter\n      if (needed.length) {\n        if (!room.availableDates || !needed.every(d => room.availableDates.includes(d))) return false;\n      }\n      return true;\n    });\n    setFilteredRooms(fr);\n    // unselect any rooms not in filtered list\n    setSelectedRoomIds(prev => {\n      const next = new Set();\n      fr.forEach(r => {\n        if (prev.has(r._id)) next.add(r._id);\n      });\n      return next;\n    });\n  }, [rooms, typeFilter, filterDates]);\n  const toggleType = t => setTypeFilter(f => ({\n    ...f,\n    [t]: !f[t]\n  }));\n  const handleDateChange = e => setFilterDates(d => ({\n    ...d,\n    [e.target.name]: e.target.value\n  }));\n  const toggleRoomSelection = id => setSelectedRoomIds(prev => {\n    const next = new Set(prev);\n    next.has(id) ? next.delete(id) : next.add(id);\n    return next;\n  });\n  const handleFormChange = e => setFormData(fd => ({\n    ...fd,\n    [e.target.name]: e.target.value\n  }));\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.agentEmail) {\n      return setMessage('Agent email is required.');\n    }\n    if (!selectedHotel || !filterDates.checkIn || !filterDates.checkOut) {\n      return setMessage('Please select hotel and dates.');\n    }\n    if (selectedRoomIds.size === 0) {\n      return setMessage('Please select at least one room.');\n    }\n    const roomsPayload = Array.from(selectedRoomIds).map(roomId => ({\n      roomId,\n      guestName: '',\n      // optionally allow agent to assign guest names/emails later\n      guestEmail: '',\n      checkIn: filterDates.checkIn,\n      checkOut: filterDates.checkOut\n    }));\n    try {\n      const payload = {\n        agentEmail: formData.agentEmail,\n        discountRate: parseFloat(formData.discountRate) || 0,\n        rooms: roomsPayload\n      };\n      const res = await API.post('/group-bookings', payload);\n      setMessage('Group booking created!');\n      navigate(`/group-booking/${res.data._id}`);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(err);\n      setMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Error creating group booking');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Group Booking (Travel Agent)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Agent Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"agentEmail\",\n          value: formData.agentEmail,\n          onChange: handleFormChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select Hotel:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedHotel,\n          onChange: e => setSelectedHotel(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select Hotel --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), hotels.map(h => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: h._id,\n            children: [h.name, \" \\u2014 \", h.location]\n          }, h._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), selectedHotel && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Check-In:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"checkIn\",\n            value: filterDates.checkIn,\n            onChange: handleDateChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Check-Out:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 40\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"checkOut\",\n            value: filterDates.checkOut,\n            onChange: handleDateChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Filter by Room Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 52\n          }, this), ['Single', 'Double', 'Suite'].map(t => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: typeFilter[t],\n              onChange: () => toggleType(t)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), \" \", t]\n          }, t, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: '1.5rem'\n          },\n          children: [\"Available Rooms (\", filteredRooms.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          cellPadding: \"5\",\n          style: {\n            width: '100%',\n            borderCollapse: 'collapse'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Room No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amenities\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [filteredRooms.map(r => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: selectedRoomIds.has(r._id),\n                  onChange: () => toggleRoomSelection(r._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: r.roomno\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: r.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", r.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (r.amenities || []).join(', ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this)]\n            }, r._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this)), filteredRooms.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"5\",\n                style: {\n                  textAlign: 'center'\n                },\n                children: \"No rooms match your filters.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Group Discount (%):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"discountRate\",\n            min: \"0\",\n            max: \"100\",\n            value: formData.discountRate,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            marginTop: '1rem'\n          },\n          children: \"Create Group Booking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupBookingForm, \"OlKaA2JA+14dGgIY02ULVN3pxCc=\", false, function () {\n  return [useNavigate];\n});\n_c = GroupBookingForm;\nexport default GroupBookingForm;\nvar _c;\n$RefreshReg$(_c, \"GroupBookingForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","API","jsxDEV","_jsxDEV","Fragment","_Fragment","getDatesBetween","start","end","dates","curr","Date","last","push","toISOString","split","setDate","getDate","GroupBookingForm","_s","navigate","hotels","setHotels","selectedHotel","setSelectedHotel","rooms","setRooms","filteredRooms","setFilteredRooms","typeFilter","setTypeFilter","Single","Double","Suite","filterDates","setFilterDates","checkIn","checkOut","selectedRoomIds","setSelectedRoomIds","Set","formData","setFormData","agentEmail","discountRate","message","setMessage","get","then","r","data","catch","console","error","params","hotel","needed","types","Object","entries","filter","_","v","map","t","fr","room","length","includes","type","availableDates","every","d","prev","next","forEach","has","_id","add","toggleType","f","handleDateChange","e","target","name","value","toggleRoomSelection","id","delete","handleFormChange","fd","handleSubmit","preventDefault","size","roomsPayload","Array","from","roomId","guestName","guestEmail","payload","parseFloat","res","post","err","_err$response","_err$response$data","response","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","color","onSubmit","onChange","required","marginTop","h","location","marginRight","checked","border","cellPadding","width","borderCollapse","roomno","price","amenities","join","colSpan","textAlign","min","max","_c","$RefreshReg$"],"sources":["D:/codining/SE/project/Hotel-Booking-Microservices/frontend/booking-frontend/src/components/GroupBookingForm.js"],"sourcesContent":["// src/components/GroupBookingForm.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport API from '../api';  // booking-service client\r\n// if you used separate clients: import { HotelAPI, BookingAPI } from '../api';\r\n\r\nfunction getDatesBetween(start, end) {\r\n  const dates = [];\r\n  let curr = new Date(start);\r\n  const last = new Date(end);\r\n  while (curr < last) {\r\n    dates.push(curr.toISOString().split('T')[0]);\r\n    curr.setDate(curr.getDate() + 1);\r\n  }\r\n  return dates;\r\n}\r\n\r\nconst GroupBookingForm = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // state\r\n  const [hotels, setHotels] = useState([]);\r\n  const [selectedHotel, setSelectedHotel] = useState('');\r\n  const [rooms, setRooms] = useState([]);\r\n  const [filteredRooms, setFilteredRooms] = useState([]);\r\n\r\n  const [typeFilter, setTypeFilter] = useState({\r\n    Single: false,\r\n    Double: false,\r\n    Suite: false\r\n  });\r\n\r\n  const [filterDates, setFilterDates] = useState({\r\n    checkIn: '',\r\n    checkOut: ''\r\n  });\r\n\r\n  const [selectedRoomIds, setSelectedRoomIds] = useState(new Set());\r\n  const [formData, setFormData] = useState({\r\n    agentEmail: '',\r\n    discountRate: 0\r\n  });\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  // 1. Fetch hotels on mount\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/hotels')\r\n      .then(r => setHotels(r.data))\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  // 2. Fetch rooms when hotel changes\r\n  useEffect(() => {\r\n    if (!selectedHotel) return;\r\n    axios.get('http://localhost:5000/api/rooms', { params: { hotel: selectedHotel } })\r\n      .then(r => setRooms(r.data))\r\n      .catch(console.error);\r\n    // reset filters & selection\r\n    setTypeFilter({ Single:false, Double:false, Suite:false });\r\n    setFilterDates({ checkIn:'', checkOut:'' });\r\n    setSelectedRoomIds(new Set());\r\n    setFilteredRooms([]);\r\n  }, [selectedHotel]);\r\n\r\n  // 3. Recompute filteredRooms when rooms, types, or dates change\r\n  useEffect(() => {\r\n    const { checkIn, checkOut } = filterDates;\r\n    const needed = (checkIn && checkOut) ? getDatesBetween(checkIn, checkOut) : [];\r\n    const types = Object.entries(typeFilter)\r\n      .filter(([_, v]) => v).map(([t]) => t);\r\n\r\n    const fr = rooms.filter(room => {\r\n      // type filter\r\n      if (types.length && !types.includes(room.type)) return false;\r\n      // date filter\r\n      if (needed.length) {\r\n        if (!room.availableDates ||\r\n            !needed.every(d => room.availableDates.includes(d)))\r\n          return false;\r\n      }\r\n      return true;\r\n    });\r\n    setFilteredRooms(fr);\r\n    // unselect any rooms not in filtered list\r\n    setSelectedRoomIds(prev => {\r\n      const next = new Set();\r\n      fr.forEach(r => { if (prev.has(r._id)) next.add(r._id); });\r\n      return next;\r\n    });\r\n  }, [rooms, typeFilter, filterDates]);\r\n\r\n  const toggleType = t =>\r\n    setTypeFilter(f => ({ ...f, [t]: !f[t] }));\r\n\r\n  const handleDateChange = e =>\r\n    setFilterDates(d => ({ ...d, [e.target.name]: e.target.value }));\r\n\r\n  const toggleRoomSelection = id =>\r\n    setSelectedRoomIds(prev => {\r\n      const next = new Set(prev);\r\n      next.has(id) ? next.delete(id) : next.add(id);\r\n      return next;\r\n    });\r\n\r\n  const handleFormChange = e =>\r\n    setFormData(fd => ({ ...fd, [e.target.name]: e.target.value }));\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    if (!formData.agentEmail) {\r\n      return setMessage('Agent email is required.');\r\n    }\r\n    if (!selectedHotel || !filterDates.checkIn || !filterDates.checkOut) {\r\n      return setMessage('Please select hotel and dates.');\r\n    }\r\n    if (selectedRoomIds.size === 0) {\r\n      return setMessage('Please select at least one room.');\r\n    }\r\n\r\n    const roomsPayload = Array.from(selectedRoomIds).map(roomId => ({\r\n      roomId,\r\n      guestName: '',      // optionally allow agent to assign guest names/emails later\r\n      guestEmail: '',\r\n      checkIn: filterDates.checkIn,\r\n      checkOut: filterDates.checkOut\r\n    }));\r\n\r\n    try {\r\n      const payload = {\r\n        agentEmail: formData.agentEmail,\r\n        discountRate: parseFloat(formData.discountRate) || 0,\r\n        rooms: roomsPayload\r\n      };\r\n      const res = await API.post('/group-bookings', payload);\r\n      setMessage('Group booking created!');\r\n      navigate(`/group-booking/${res.data._id}`);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessage(err.response?.data?.error || 'Error creating group booking');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '1rem' }}>\r\n      <h2>Group Booking (Travel Agent)</h2>\r\n      {message && <p style={{ color: 'red' }}>{message}</p>}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Agent Email:</label><br/>\r\n          <input\r\n            type=\"email\"\r\n            name=\"agentEmail\"\r\n            value={formData.agentEmail}\r\n            onChange={handleFormChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div style={{ marginTop: '1rem' }}>\r\n          <label>Select Hotel:</label><br/>\r\n          <select\r\n            value={selectedHotel}\r\n            onChange={e => setSelectedHotel(e.target.value)}\r\n            required\r\n          >\r\n            <option value=\"\">-- Select Hotel --</option>\r\n            {hotels.map(h => (\r\n              <option key={h._id} value={h._id}>\r\n                {h.name} — {h.location}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {selectedHotel && (\r\n          <>\r\n            <div style={{ marginTop: '1rem' }}>\r\n              <label>Check-In:</label><br/>\r\n              <input\r\n                type=\"date\"\r\n                name=\"checkIn\"\r\n                value={filterDates.checkIn}\r\n                onChange={handleDateChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>Check-Out:</label><br/>\r\n              <input\r\n                type=\"date\"\r\n                name=\"checkOut\"\r\n                value={filterDates.checkOut}\r\n                onChange={handleDateChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div style={{ marginTop: '1rem' }}>\r\n              <strong>Filter by Room Type:</strong><br/>\r\n              {['Single','Double','Suite'].map(t => (\r\n                <label key={t} style={{ marginRight: 10 }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={typeFilter[t]}\r\n                    onChange={() => toggleType(t)}\r\n                  /> {t}\r\n                </label>\r\n              ))}\r\n            </div>\r\n\r\n            <h3 style={{ marginTop: '1.5rem' }}>\r\n              Available Rooms ({filteredRooms.length})\r\n            </h3>\r\n            <table border=\"1\" cellPadding=\"5\" style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n              <thead>\r\n                <tr>\r\n                  <th>Select</th>\r\n                  <th>Room No</th>\r\n                  <th>Type</th>\r\n                  <th>Price</th>\r\n                  <th>Amenities</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredRooms.map(r => (\r\n                  <tr key={r._id}>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedRoomIds.has(r._id)}\r\n                        onChange={() => toggleRoomSelection(r._id)}\r\n                      />\r\n                    </td>\r\n                    <td>{r.roomno}</td>\r\n                    <td>{r.type}</td>\r\n                    <td>${r.price}</td>\r\n                    <td>{(r.amenities||[]).join(', ')}</td>\r\n                  </tr>\r\n                ))}\r\n                {filteredRooms.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan=\"5\" style={{ textAlign: 'center' }}>\r\n                      No rooms match your filters.\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n\r\n            <div style={{ marginTop: '1rem' }}>\r\n              <label>Group Discount (%):</label><br/>\r\n              <input\r\n                type=\"number\"\r\n                name=\"discountRate\"\r\n                min=\"0\" max=\"100\"\r\n                value={formData.discountRate}\r\n                onChange={handleFormChange}\r\n              />\r\n            </div>\r\n\r\n            <button type=\"submit\" style={{ marginTop: '1rem' }}>\r\n              Create Group Booking\r\n            </button>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupBookingForm;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,GAAG,MAAM,QAAQ,CAAC,CAAE;AAC3B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,eAAeA,CAACC,KAAK,EAAEC,GAAG,EAAE;EACnC,MAAMC,KAAK,GAAG,EAAE;EAChB,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACJ,KAAK,CAAC;EAC1B,MAAMK,IAAI,GAAG,IAAID,IAAI,CAACH,GAAG,CAAC;EAC1B,OAAOE,IAAI,GAAGE,IAAI,EAAE;IAClBH,KAAK,CAACI,IAAI,CAACH,IAAI,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5CL,IAAI,CAACM,OAAO,CAACN,IAAI,CAACO,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;EAClC;EACA,OAAOR,KAAK;AACd;AAEA,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGpB,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC0B,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC4B,KAAK,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC8B,aAAa,EAAEC,gBAAgB,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAM,CAACgC,UAAU,EAAEC,aAAa,CAAC,GAAGjC,QAAQ,CAAC;IAC3CkC,MAAM,EAAE,KAAK;IACbC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC;IAC7CuC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAG1C,QAAQ,CAAC,IAAI2C,GAAG,CAAC,CAAC,CAAC;EACjE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG7C,QAAQ,CAAC;IACvC8C,UAAU,EAAE,EAAE;IACdC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACgD,GAAG,CAAC,kCAAkC,CAAC,CAC1CC,IAAI,CAACC,CAAC,IAAI3B,SAAS,CAAC2B,CAAC,CAACC,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAvD,SAAS,CAAC,MAAM;IACd,IAAI,CAACyB,aAAa,EAAE;IACpBxB,KAAK,CAACgD,GAAG,CAAC,iCAAiC,EAAE;MAAEO,MAAM,EAAE;QAAEC,KAAK,EAAEhC;MAAc;IAAE,CAAC,CAAC,CAC/EyB,IAAI,CAACC,CAAC,IAAIvB,QAAQ,CAACuB,CAAC,CAACC,IAAI,CAAC,CAAC,CAC3BC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;IACvB;IACAvB,aAAa,CAAC;MAAEC,MAAM,EAAC,KAAK;MAAEC,MAAM,EAAC,KAAK;MAAEC,KAAK,EAAC;IAAM,CAAC,CAAC;IAC1DE,cAAc,CAAC;MAAEC,OAAO,EAAC,EAAE;MAAEC,QAAQ,EAAC;IAAG,CAAC,CAAC;IAC3CE,kBAAkB,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;IAC7BZ,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC,EAAE,CAACL,aAAa,CAAC,CAAC;;EAEnB;EACAzB,SAAS,CAAC,MAAM;IACd,MAAM;MAAEsC,OAAO;MAAEC;IAAS,CAAC,GAAGH,WAAW;IACzC,MAAMsB,MAAM,GAAIpB,OAAO,IAAIC,QAAQ,GAAI/B,eAAe,CAAC8B,OAAO,EAAEC,QAAQ,CAAC,GAAG,EAAE;IAC9E,MAAMoB,KAAK,GAAGC,MAAM,CAACC,OAAO,CAAC9B,UAAU,CAAC,CACrC+B,MAAM,CAAC,CAAC,CAACC,CAAC,EAAEC,CAAC,CAAC,KAAKA,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,CAAC,CAAC,KAAKA,CAAC,CAAC;IAExC,MAAMC,EAAE,GAAGxC,KAAK,CAACmC,MAAM,CAACM,IAAI,IAAI;MAC9B;MACA,IAAIT,KAAK,CAACU,MAAM,IAAI,CAACV,KAAK,CAACW,QAAQ,CAACF,IAAI,CAACG,IAAI,CAAC,EAAE,OAAO,KAAK;MAC5D;MACA,IAAIb,MAAM,CAACW,MAAM,EAAE;QACjB,IAAI,CAACD,IAAI,CAACI,cAAc,IACpB,CAACd,MAAM,CAACe,KAAK,CAACC,CAAC,IAAIN,IAAI,CAACI,cAAc,CAACF,QAAQ,CAACI,CAAC,CAAC,CAAC,EACrD,OAAO,KAAK;MAChB;MACA,OAAO,IAAI;IACb,CAAC,CAAC;IACF5C,gBAAgB,CAACqC,EAAE,CAAC;IACpB;IACA1B,kBAAkB,CAACkC,IAAI,IAAI;MACzB,MAAMC,IAAI,GAAG,IAAIlC,GAAG,CAAC,CAAC;MACtByB,EAAE,CAACU,OAAO,CAAC1B,CAAC,IAAI;QAAE,IAAIwB,IAAI,CAACG,GAAG,CAAC3B,CAAC,CAAC4B,GAAG,CAAC,EAAEH,IAAI,CAACI,GAAG,CAAC7B,CAAC,CAAC4B,GAAG,CAAC;MAAE,CAAC,CAAC;MAC1D,OAAOH,IAAI;IACb,CAAC,CAAC;EACJ,CAAC,EAAE,CAACjD,KAAK,EAAEI,UAAU,EAAEK,WAAW,CAAC,CAAC;EAEpC,MAAM6C,UAAU,GAAGf,CAAC,IAClBlC,aAAa,CAACkD,CAAC,KAAK;IAAE,GAAGA,CAAC;IAAE,CAAChB,CAAC,GAAG,CAACgB,CAAC,CAAChB,CAAC;EAAE,CAAC,CAAC,CAAC;EAE5C,MAAMiB,gBAAgB,GAAGC,CAAC,IACxB/C,cAAc,CAACqC,CAAC,KAAK;IAAE,GAAGA,CAAC;IAAE,CAACU,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;EAAM,CAAC,CAAC,CAAC;EAElE,MAAMC,mBAAmB,GAAGC,EAAE,IAC5BhD,kBAAkB,CAACkC,IAAI,IAAI;IACzB,MAAMC,IAAI,GAAG,IAAIlC,GAAG,CAACiC,IAAI,CAAC;IAC1BC,IAAI,CAACE,GAAG,CAACW,EAAE,CAAC,GAAGb,IAAI,CAACc,MAAM,CAACD,EAAE,CAAC,GAAGb,IAAI,CAACI,GAAG,CAACS,EAAE,CAAC;IAC7C,OAAOb,IAAI;EACb,CAAC,CAAC;EAEJ,MAAMe,gBAAgB,GAAGP,CAAC,IACxBxC,WAAW,CAACgD,EAAE,KAAK;IAAE,GAAGA,EAAE;IAAE,CAACR,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;EAAM,CAAC,CAAC,CAAC;EAEjE,MAAMM,YAAY,GAAG,MAAMT,CAAC,IAAI;IAC9BA,CAAC,CAACU,cAAc,CAAC,CAAC;IAClB,IAAI,CAACnD,QAAQ,CAACE,UAAU,EAAE;MACxB,OAAOG,UAAU,CAAC,0BAA0B,CAAC;IAC/C;IACA,IAAI,CAACvB,aAAa,IAAI,CAACW,WAAW,CAACE,OAAO,IAAI,CAACF,WAAW,CAACG,QAAQ,EAAE;MACnE,OAAOS,UAAU,CAAC,gCAAgC,CAAC;IACrD;IACA,IAAIR,eAAe,CAACuD,IAAI,KAAK,CAAC,EAAE;MAC9B,OAAO/C,UAAU,CAAC,kCAAkC,CAAC;IACvD;IAEA,MAAMgD,YAAY,GAAGC,KAAK,CAACC,IAAI,CAAC1D,eAAe,CAAC,CAACyB,GAAG,CAACkC,MAAM,KAAK;MAC9DA,MAAM;MACNC,SAAS,EAAE,EAAE;MAAO;MACpBC,UAAU,EAAE,EAAE;MACd/D,OAAO,EAAEF,WAAW,CAACE,OAAO;MAC5BC,QAAQ,EAAEH,WAAW,CAACG;IACxB,CAAC,CAAC,CAAC;IAEH,IAAI;MACF,MAAM+D,OAAO,GAAG;QACdzD,UAAU,EAAEF,QAAQ,CAACE,UAAU;QAC/BC,YAAY,EAAEyD,UAAU,CAAC5D,QAAQ,CAACG,YAAY,CAAC,IAAI,CAAC;QACpDnB,KAAK,EAAEqE;MACT,CAAC;MACD,MAAMQ,GAAG,GAAG,MAAMrG,GAAG,CAACsG,IAAI,CAAC,iBAAiB,EAAEH,OAAO,CAAC;MACtDtD,UAAU,CAAC,wBAAwB,CAAC;MACpC1B,QAAQ,CAAC,kBAAkBkF,GAAG,CAACpD,IAAI,CAAC2B,GAAG,EAAE,CAAC;IAC5C,CAAC,CAAC,OAAO2B,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZtD,OAAO,CAACC,KAAK,CAACmD,GAAG,CAAC;MAClB1D,UAAU,CAAC,EAAA2D,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcvD,IAAI,cAAAwD,kBAAA,uBAAlBA,kBAAA,CAAoBrD,KAAK,KAAI,8BAA8B,CAAC;IACzE;EACF,CAAC;EAED,oBACElD,OAAA;IAAKyG,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9B3G,OAAA;MAAA2G,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpCrE,OAAO,iBAAI1C,OAAA;MAAGyG,KAAK,EAAE;QAAEO,KAAK,EAAE;MAAM,CAAE;MAAAL,QAAA,EAAEjE;IAAO;MAAAkE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErD/G,OAAA;MAAMiH,QAAQ,EAAEzB,YAAa;MAAAmB,QAAA,gBAC3B3G,OAAA;QAAA2G,QAAA,gBACE3G,OAAA;UAAA2G,QAAA,EAAO;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAAA/G,OAAA;UAAA4G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChC/G,OAAA;UACEkE,IAAI,EAAC,OAAO;UACZe,IAAI,EAAC,YAAY;UACjBC,KAAK,EAAE5C,QAAQ,CAACE,UAAW;UAC3B0E,QAAQ,EAAE5B,gBAAiB;UAC3B6B,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEN/G,OAAA;QAAKyG,KAAK,EAAE;UAAEW,SAAS,EAAE;QAAO,CAAE;QAAAT,QAAA,gBAChC3G,OAAA;UAAA2G,QAAA,EAAO;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAAA/G,OAAA;UAAA4G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjC/G,OAAA;UACEkF,KAAK,EAAE9D,aAAc;UACrB8F,QAAQ,EAAEnC,CAAC,IAAI1D,gBAAgB,CAAC0D,CAAC,CAACC,MAAM,CAACE,KAAK,CAAE;UAChDiC,QAAQ;UAAAR,QAAA,gBAER3G,OAAA;YAAQkF,KAAK,EAAC,EAAE;YAAAyB,QAAA,EAAC;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAC3C7F,MAAM,CAAC0C,GAAG,CAACyD,CAAC,iBACXrH,OAAA;YAAoBkF,KAAK,EAAEmC,CAAC,CAAC3C,GAAI;YAAAiC,QAAA,GAC9BU,CAAC,CAACpC,IAAI,EAAC,UAAG,EAACoC,CAAC,CAACC,QAAQ;UAAA,GADXD,CAAC,CAAC3C,GAAG;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAEL3F,aAAa,iBACZpB,OAAA,CAAAE,SAAA;QAAAyG,QAAA,gBACE3G,OAAA;UAAKyG,KAAK,EAAE;YAAEW,SAAS,EAAE;UAAO,CAAE;UAAAT,QAAA,gBAChC3G,OAAA;YAAA2G,QAAA,EAAO;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAAA/G,OAAA;YAAA4G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7B/G,OAAA;YACEkE,IAAI,EAAC,MAAM;YACXe,IAAI,EAAC,SAAS;YACdC,KAAK,EAAEnD,WAAW,CAACE,OAAQ;YAC3BiF,QAAQ,EAAEpC,gBAAiB;YAC3BqC,QAAQ;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN/G,OAAA;UAAA2G,QAAA,gBACE3G,OAAA;YAAA2G,QAAA,EAAO;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAAA/G,OAAA;YAAA4G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9B/G,OAAA;YACEkE,IAAI,EAAC,MAAM;YACXe,IAAI,EAAC,UAAU;YACfC,KAAK,EAAEnD,WAAW,CAACG,QAAS;YAC5BgF,QAAQ,EAAEpC,gBAAiB;YAC3BqC,QAAQ;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN/G,OAAA;UAAKyG,KAAK,EAAE;YAAEW,SAAS,EAAE;UAAO,CAAE;UAAAT,QAAA,gBAChC3G,OAAA;YAAA2G,QAAA,EAAQ;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAAA/G,OAAA;YAAA4G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACzC,CAAC,QAAQ,EAAC,QAAQ,EAAC,OAAO,CAAC,CAACnD,GAAG,CAACC,CAAC,iBAChC7D,OAAA;YAAeyG,KAAK,EAAE;cAAEc,WAAW,EAAE;YAAG,CAAE;YAAAZ,QAAA,gBACxC3G,OAAA;cACEkE,IAAI,EAAC,UAAU;cACfsD,OAAO,EAAE9F,UAAU,CAACmC,CAAC,CAAE;cACvBqD,QAAQ,EAAEA,CAAA,KAAMtC,UAAU,CAACf,CAAC;YAAE;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B,CAAC,KAAC,EAAClD,CAAC;UAAA,GALKA,CAAC;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMN,CACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN/G,OAAA;UAAIyG,KAAK,EAAE;YAAEW,SAAS,EAAE;UAAS,CAAE;UAAAT,QAAA,GAAC,mBACjB,EAACnF,aAAa,CAACwC,MAAM,EAAC,GACzC;QAAA;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACL/G,OAAA;UAAOyH,MAAM,EAAC,GAAG;UAACC,WAAW,EAAC,GAAG;UAACjB,KAAK,EAAE;YAAEkB,KAAK,EAAE,MAAM;YAAEC,cAAc,EAAE;UAAW,CAAE;UAAAjB,QAAA,gBACrF3G,OAAA;YAAA2G,QAAA,eACE3G,OAAA;cAAA2G,QAAA,gBACE3G,OAAA;gBAAA2G,QAAA,EAAI;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACf/G,OAAA;gBAAA2G,QAAA,EAAI;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChB/G,OAAA;gBAAA2G,QAAA,EAAI;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACb/G,OAAA;gBAAA2G,QAAA,EAAI;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACd/G,OAAA;gBAAA2G,QAAA,EAAI;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACR/G,OAAA;YAAA2G,QAAA,GACGnF,aAAa,CAACoC,GAAG,CAACd,CAAC,iBAClB9C,OAAA;cAAA2G,QAAA,gBACE3G,OAAA;gBAAA2G,QAAA,eACE3G,OAAA;kBACEkE,IAAI,EAAC,UAAU;kBACfsD,OAAO,EAAErF,eAAe,CAACsC,GAAG,CAAC3B,CAAC,CAAC4B,GAAG,CAAE;kBACpCwC,QAAQ,EAAEA,CAAA,KAAM/B,mBAAmB,CAACrC,CAAC,CAAC4B,GAAG;gBAAE;kBAAAkC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5C;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACL/G,OAAA;gBAAA2G,QAAA,EAAK7D,CAAC,CAAC+E;cAAM;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACnB/G,OAAA;gBAAA2G,QAAA,EAAK7D,CAAC,CAACoB;cAAI;gBAAA0C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACjB/G,OAAA;gBAAA2G,QAAA,GAAI,GAAC,EAAC7D,CAAC,CAACgF,KAAK;cAAA;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACnB/G,OAAA;gBAAA2G,QAAA,EAAK,CAAC7D,CAAC,CAACiF,SAAS,IAAE,EAAE,EAAEC,IAAI,CAAC,IAAI;cAAC;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GAXhCjE,CAAC,CAAC4B,GAAG;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAYV,CACL,CAAC,EACDvF,aAAa,CAACwC,MAAM,KAAK,CAAC,iBACzBhE,OAAA;cAAA2G,QAAA,eACE3G,OAAA;gBAAIiI,OAAO,EAAC,GAAG;gBAACxB,KAAK,EAAE;kBAAEyB,SAAS,EAAE;gBAAS,CAAE;gBAAAvB,QAAA,EAAC;cAEhD;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CACL;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAER/G,OAAA;UAAKyG,KAAK,EAAE;YAAEW,SAAS,EAAE;UAAO,CAAE;UAAAT,QAAA,gBAChC3G,OAAA;YAAA2G,QAAA,EAAO;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAAA/G,OAAA;YAAA4G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvC/G,OAAA;YACEkE,IAAI,EAAC,QAAQ;YACbe,IAAI,EAAC,cAAc;YACnBkD,GAAG,EAAC,GAAG;YAACC,GAAG,EAAC,KAAK;YACjBlD,KAAK,EAAE5C,QAAQ,CAACG,YAAa;YAC7ByE,QAAQ,EAAE5B;UAAiB;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN/G,OAAA;UAAQkE,IAAI,EAAC,QAAQ;UAACuC,KAAK,EAAE;YAAEW,SAAS,EAAE;UAAO,CAAE;UAAAT,QAAA,EAAC;QAEpD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eACT,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC/F,EAAA,CA7PID,gBAAgB;EAAA,QACHlB,WAAW;AAAA;AAAAwI,EAAA,GADxBtH,gBAAgB;AA+PtB,eAAeA,gBAAgB;AAAC,IAAAsH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}