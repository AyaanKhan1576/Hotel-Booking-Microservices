{"ast":null,"code":"var _jsxFileName = \"D:\\\\codining\\\\SE\\\\project\\\\Hotel-Booking-Microservices\\\\frontend\\\\booking-frontend\\\\src\\\\components\\\\GroupBookingForm.js\",\n  _s = $RefreshSig$();\n// src/components/GroupBookingForm.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport API from '../api'; // booking-service client\n\n// Returns array of YYYY-MM-DD strings from start through end, inclusive.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getDatesBetween(start, end) {\n  const dates = [];\n  let curr = new Date(start);\n  const last = new Date(end);\n  while (curr <= last) {\n    dates.push(curr.toISOString().split('T')[0]);\n    curr.setDate(curr.getDate() + 1);\n  }\n  return dates;\n}\nconst GroupBookingForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const [hotels, setHotels] = useState([]);\n  const [selectedHotel, setSelectedHotel] = useState('');\n  const [rooms, setRooms] = useState([]);\n  const [filteredRooms, setFilteredRooms] = useState([]);\n  const [typeFilter, setTypeFilter] = useState({\n    Single: false,\n    Double: false,\n    Suite: false\n  });\n  const [filterDates, setFilterDates] = useState({\n    checkIn: '',\n    checkOut: ''\n  });\n  const [selectedRoomIds, setSelectedRoomIds] = useState(new Set());\n  const [formData, setFormData] = useState({\n    agentEmail: '',\n    discountRate: 0\n  });\n  const [message, setMessage] = useState('');\n\n  // 1) Load hotels\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/hotels').then(r => setHotels(r.data)).catch(err => console.error('Error fetching hotels:', err));\n  }, []);\n\n  // 2) Load rooms when a hotel is selected\n  useEffect(() => {\n    if (!selectedHotel) return;\n    axios.get('http://localhost:5000/api/rooms', {\n      params: {\n        hotel: selectedHotel\n      }\n    }).then(r => setRooms(r.data)).catch(err => console.error('Error fetching rooms:', err));\n\n    // reset everything\n    setTypeFilter({\n      Single: false,\n      Double: false,\n      Suite: false\n    });\n    setFilterDates({\n      checkIn: '',\n      checkOut: ''\n    });\n    setSelectedRoomIds(new Set());\n    setFilteredRooms([]);\n  }, [selectedHotel]);\n\n  // 3) Filter whenever rooms, typeFilter, or dates change\n  useEffect(() => {\n    // Only filter if both dates are present\n    const {\n      checkIn,\n      checkOut\n    } = filterDates;\n    const dateRange = checkIn && checkOut ? getDatesBetween(checkIn, checkOut) : [];\n\n    // Which types are checked?\n    const types = Object.entries(typeFilter).filter(([_, enabled]) => enabled).map(([type]) => type);\n    console.log('--- Filtering Rooms ---');\n    console.log('Selected Types:', types);\n    console.log('Date Range:', dateRange);\n    const fr = rooms.filter(room => {\n      // 3a) Type filter\n      if (types.length && !types.includes(room.type)) return false;\n\n      // 3b) Date filter\n      if (dateRange.length) {\n        // room.availableDates should be an array of YYYY-MM-DD strings\n        if (!room.availableDates) return false;\n        // every date in our range must be in room.availableDates\n        for (let d of dateRange) {\n          if (!room.availableDates.includes(d)) return false;\n        }\n      }\n      return true;\n    });\n    console.log('Rooms BEFORE filter:', rooms.length, 'AFTER filter:', fr.length);\n    setFilteredRooms(fr);\n\n    // Un-check any room no longer in filtered list\n    setSelectedRoomIds(prev => {\n      const next = new Set();\n      fr.forEach(r => {\n        if (prev.has(r._id)) next.add(r._id);\n      });\n      return next;\n    });\n  }, [rooms, typeFilter, filterDates]);\n\n  // Handlers\n  const toggleType = type => setTypeFilter(f => ({\n    ...f,\n    [type]: !f[type]\n  }));\n  const handleDateChange = e => setFilterDates(d => ({\n    ...d,\n    [e.target.name]: e.target.value\n  }));\n  const toggleRoomSelection = id => setSelectedRoomIds(prev => {\n    const next = new Set(prev);\n    next.has(id) ? next.delete(id) : next.add(id);\n    return next;\n  });\n  const handleFormChange = e => setFormData(fd => ({\n    ...fd,\n    [e.target.name]: e.target.value\n  }));\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.agentEmail) return setMessage('Agent email is required.');\n    if (!selectedHotel || !filterDates.checkIn || !filterDates.checkOut) return setMessage('Please select hotel and both dates.');\n    if (selectedRoomIds.size === 0) return setMessage('Please select at least one room.');\n    const roomsPayload = Array.from(selectedRoomIds).map(roomId => ({\n      roomId,\n      guestName: '',\n      guestEmail: '',\n      checkIn: filterDates.checkIn,\n      checkOut: filterDates.checkOut\n    }));\n    try {\n      const payload = {\n        agentEmail: formData.agentEmail,\n        discountRate: parseFloat(formData.discountRate) || 0,\n        rooms: roomsPayload\n      };\n      const res = await API.post('/group-bookings', payload);\n      setMessage('Group booking created!');\n      navigate(`/group-booking/${res.data._id}`);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(err);\n      setMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Error creating group booking');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Group Booking (Travel Agent)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Agent Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"agentEmail\",\n          value: formData.agentEmail,\n          onChange: handleFormChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select Hotel:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedHotel,\n          onChange: e => setSelectedHotel(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select Hotel --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), hotels.map(h => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: h._id,\n            children: [h.name, \" \\u2014 \", h.location]\n          }, h._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), selectedHotel && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Check-In:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"checkIn\",\n            value: filterDates.checkIn,\n            onChange: handleDateChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Check-Out:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 40\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"checkOut\",\n            value: filterDates.checkOut,\n            onChange: handleDateChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Filter by Room Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 52\n          }, this), ['Single', 'Double', 'Suite'].map(t => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: typeFilter[t],\n              onChange: () => toggleType(t)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this), \" \", t]\n          }, t, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: '1.5rem'\n          },\n          children: [\"Available Rooms (\", filteredRooms.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          cellPadding: \"5\",\n          style: {\n            width: '100%',\n            borderCollapse: 'collapse'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Room No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Capacity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amenities\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Available Dates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [filteredRooms.map(r => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: selectedRoomIds.has(r._id),\n                  onChange: () => toggleRoomSelection(r._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: r.roomno\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: r.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: r.capacity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", r.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (r.amenities || []).join(', ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (r.availableDates || []).sort().map(d => new Date(d).toLocaleDateString()).join(', ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this)]\n            }, r._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this)), filteredRooms.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"7\",\n                style: {\n                  textAlign: 'center'\n                },\n                children: \"No rooms match your filters.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Group Discount (%):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"discountRate\",\n            min: \"0\",\n            max: \"100\",\n            value: formData.discountRate,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            marginTop: '1rem'\n          },\n          children: \"Create Group Booking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupBookingForm, \"OlKaA2JA+14dGgIY02ULVN3pxCc=\", false, function () {\n  return [useNavigate];\n});\n_c = GroupBookingForm;\nexport default GroupBookingForm;\nvar _c;\n$RefreshReg$(_c, \"GroupBookingForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","API","jsxDEV","_jsxDEV","Fragment","_Fragment","getDatesBetween","start","end","dates","curr","Date","last","push","toISOString","split","setDate","getDate","GroupBookingForm","_s","navigate","hotels","setHotels","selectedHotel","setSelectedHotel","rooms","setRooms","filteredRooms","setFilteredRooms","typeFilter","setTypeFilter","Single","Double","Suite","filterDates","setFilterDates","checkIn","checkOut","selectedRoomIds","setSelectedRoomIds","Set","formData","setFormData","agentEmail","discountRate","message","setMessage","get","then","r","data","catch","err","console","error","params","hotel","dateRange","types","Object","entries","filter","_","enabled","map","type","log","fr","room","length","includes","availableDates","d","prev","next","forEach","has","_id","add","toggleType","f","handleDateChange","e","target","name","value","toggleRoomSelection","id","delete","handleFormChange","fd","handleSubmit","preventDefault","size","roomsPayload","Array","from","roomId","guestName","guestEmail","payload","parseFloat","res","post","_err$response","_err$response$data","response","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","color","onSubmit","onChange","required","marginTop","h","location","t","marginRight","checked","border","cellPadding","width","borderCollapse","roomno","capacity","price","amenities","join","sort","toLocaleDateString","colSpan","textAlign","min","max","_c","$RefreshReg$"],"sources":["D:/codining/SE/project/Hotel-Booking-Microservices/frontend/booking-frontend/src/components/GroupBookingForm.js"],"sourcesContent":["// src/components/GroupBookingForm.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport API from '../api';  // booking-service client\r\n\r\n// Returns array of YYYY-MM-DD strings from start through end, inclusive.\r\nfunction getDatesBetween(start, end) {\r\n  const dates = [];\r\n  let curr = new Date(start);\r\n  const last = new Date(end);\r\n  while (curr <= last) {\r\n    dates.push(curr.toISOString().split('T')[0]);\r\n    curr.setDate(curr.getDate() + 1);\r\n  }\r\n  return dates;\r\n}\r\n\r\nconst GroupBookingForm = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [hotels, setHotels] = useState([]);\r\n  const [selectedHotel, setSelectedHotel] = useState('');\r\n  const [rooms, setRooms] = useState([]);\r\n  const [filteredRooms, setFilteredRooms] = useState([]);\r\n\r\n  const [typeFilter, setTypeFilter] = useState({\r\n    Single: false,\r\n    Double: false,\r\n    Suite: false\r\n  });\r\n\r\n  const [filterDates, setFilterDates] = useState({\r\n    checkIn: '',\r\n    checkOut: ''\r\n  });\r\n\r\n  const [selectedRoomIds, setSelectedRoomIds] = useState(new Set());\r\n  const [formData, setFormData] = useState({\r\n    agentEmail: '',\r\n    discountRate: 0\r\n  });\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  // 1) Load hotels\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/hotels')\r\n      .then(r => setHotels(r.data))\r\n      .catch(err => console.error('Error fetching hotels:', err));\r\n  }, []);\r\n\r\n  // 2) Load rooms when a hotel is selected\r\n  useEffect(() => {\r\n    if (!selectedHotel) return;\r\n    axios.get('http://localhost:5000/api/rooms', { params: { hotel: selectedHotel } })\r\n      .then(r => setRooms(r.data))\r\n      .catch(err => console.error('Error fetching rooms:', err));\r\n\r\n    // reset everything\r\n    setTypeFilter({ Single:false, Double:false, Suite:false });\r\n    setFilterDates({ checkIn:'', checkOut:'' });\r\n    setSelectedRoomIds(new Set());\r\n    setFilteredRooms([]);\r\n  }, [selectedHotel]);\r\n\r\n  // 3) Filter whenever rooms, typeFilter, or dates change\r\n  useEffect(() => {\r\n    // Only filter if both dates are present\r\n    const { checkIn, checkOut } = filterDates;\r\n    const dateRange = (checkIn && checkOut)\r\n      ? getDatesBetween(checkIn, checkOut)\r\n      : [];\r\n\r\n    // Which types are checked?\r\n    const types = Object.entries(typeFilter)\r\n      .filter(([_, enabled]) => enabled)\r\n      .map(([type]) => type);\r\n\r\n    console.log('--- Filtering Rooms ---');\r\n    console.log('Selected Types:', types);\r\n    console.log('Date Range:', dateRange);\r\n\r\n    const fr = rooms.filter(room => {\r\n      // 3a) Type filter\r\n      if (types.length && !types.includes(room.type)) return false;\r\n\r\n      // 3b) Date filter\r\n      if (dateRange.length) {\r\n        // room.availableDates should be an array of YYYY-MM-DD strings\r\n        if (!room.availableDates) return false;\r\n        // every date in our range must be in room.availableDates\r\n        for (let d of dateRange) {\r\n          if (!room.availableDates.includes(d)) return false;\r\n        }\r\n      }\r\n      return true;\r\n    });\r\n\r\n    console.log('Rooms BEFORE filter:', rooms.length, 'AFTER filter:', fr.length);\r\n    setFilteredRooms(fr);\r\n\r\n    // Un-check any room no longer in filtered list\r\n    setSelectedRoomIds(prev => {\r\n      const next = new Set();\r\n      fr.forEach(r => { if (prev.has(r._id)) next.add(r._id) });\r\n      return next;\r\n    });\r\n  }, [rooms, typeFilter, filterDates]);\r\n\r\n  // Handlers\r\n  const toggleType = type =>\r\n    setTypeFilter(f => ({ ...f, [type]: !f[type] }));\r\n\r\n  const handleDateChange = e =>\r\n    setFilterDates(d => ({ ...d, [e.target.name]: e.target.value }));\r\n\r\n  const toggleRoomSelection = id =>\r\n    setSelectedRoomIds(prev => {\r\n      const next = new Set(prev);\r\n      next.has(id) ? next.delete(id) : next.add(id);\r\n      return next;\r\n    });\r\n\r\n  const handleFormChange = e =>\r\n    setFormData(fd => ({ ...fd, [e.target.name]: e.target.value }));\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    if (!formData.agentEmail) return setMessage('Agent email is required.');\r\n    if (!selectedHotel || !filterDates.checkIn || !filterDates.checkOut)\r\n      return setMessage('Please select hotel and both dates.');\r\n    if (selectedRoomIds.size === 0)\r\n      return setMessage('Please select at least one room.');\r\n\r\n    const roomsPayload = Array.from(selectedRoomIds).map(roomId => ({\r\n      roomId,\r\n      guestName: '',\r\n      guestEmail: '',\r\n      checkIn: filterDates.checkIn,\r\n      checkOut: filterDates.checkOut\r\n    }));\r\n\r\n    try {\r\n      const payload = {\r\n        agentEmail: formData.agentEmail,\r\n        discountRate: parseFloat(formData.discountRate) || 0,\r\n        rooms: roomsPayload\r\n      };\r\n      const res = await API.post('/group-bookings', payload);\r\n      setMessage('Group booking created!');\r\n      navigate(`/group-booking/${res.data._id}`);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessage(err.response?.data?.error || 'Error creating group booking');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '1rem' }}>\r\n      <h2>Group Booking (Travel Agent)</h2>\r\n      {message && <p style={{ color: 'red' }}>{message}</p>}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Agent Email */}\r\n        <div>\r\n          <label>Agent Email:</label><br/>\r\n          <input\r\n            type=\"email\"\r\n            name=\"agentEmail\"\r\n            value={formData.agentEmail}\r\n            onChange={handleFormChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Hotel Dropdown */}\r\n        <div style={{ marginTop: '1rem' }}>\r\n          <label>Select Hotel:</label><br/>\r\n          <select\r\n            value={selectedHotel}\r\n            onChange={e => setSelectedHotel(e.target.value)}\r\n            required\r\n          >\r\n            <option value=\"\">-- Select Hotel --</option>\r\n            {hotels.map(h => (\r\n              <option key={h._id} value={h._id}>\r\n                {h.name} — {h.location}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {selectedHotel && (\r\n          <>\r\n            {/* Date Range */}\r\n            <div style={{ marginTop: '1rem' }}>\r\n              <label>Check-In:</label><br/>\r\n              <input\r\n                type=\"date\"\r\n                name=\"checkIn\"\r\n                value={filterDates.checkIn}\r\n                onChange={handleDateChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>Check-Out:</label><br/>\r\n              <input\r\n                type=\"date\"\r\n                name=\"checkOut\"\r\n                value={filterDates.checkOut}\r\n                onChange={handleDateChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            {/* Type Filters */}\r\n            <div style={{ marginTop: '1rem' }}>\r\n              <strong>Filter by Room Type:</strong><br/>\r\n              {['Single','Double','Suite'].map(t => (\r\n                <label key={t} style={{ marginRight: 10 }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={typeFilter[t]}\r\n                    onChange={() => toggleType(t)}\r\n                  /> {t}\r\n                </label>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Filtered Rooms Table */}\r\n            <h3 style={{ marginTop: '1.5rem' }}>\r\n              Available Rooms ({filteredRooms.length})\r\n            </h3>\r\n            <table\r\n              border=\"1\"\r\n              cellPadding=\"5\"\r\n              style={{ width: '100%', borderCollapse: 'collapse' }}\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th>Select</th>\r\n                  <th>Room No</th>\r\n                  <th>Type</th>\r\n                  <th>Capacity</th>\r\n                  <th>Price</th>\r\n                  <th>Amenities</th>\r\n                  <th>Available Dates</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredRooms.map(r => (\r\n                  <tr key={r._id}>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedRoomIds.has(r._id)}\r\n                        onChange={() => toggleRoomSelection(r._id)}\r\n                      />\r\n                    </td>\r\n                    <td>{r.roomno}</td>\r\n                    <td>{r.type}</td>\r\n                    <td>{r.capacity}</td>\r\n                    <td>${r.price}</td>\r\n                    <td>{(r.amenities || []).join(', ')}</td>\r\n                    <td>\r\n                      {(r.availableDates || [])\r\n                        .sort()\r\n                        .map(d => new Date(d).toLocaleDateString())\r\n                        .join(', ')}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n                {filteredRooms.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan=\"7\" style={{ textAlign: 'center' }}>\r\n                      No rooms match your filters.\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n\r\n            {/* Discount & Submit */}\r\n            <div style={{ marginTop: '1rem' }}>\r\n              <label>Group Discount (%):</label><br/>\r\n              <input\r\n                type=\"number\"\r\n                name=\"discountRate\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                value={formData.discountRate}\r\n                onChange={handleFormChange}\r\n              />\r\n            </div>\r\n\r\n            <button type=\"submit\" style={{ marginTop: '1rem' }}>\r\n              Create Group Booking\r\n            </button>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupBookingForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}